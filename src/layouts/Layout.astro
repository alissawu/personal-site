---
// src/layouts/Layout.astro
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Share+Tech+Mono&display=swap" rel="stylesheet">
  </head>
  <body>
    <slot />
    <style is:global>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      :root {
        --cyber-black: #0a0a0a;
        --cyber-dark: #0f0f1e;
        --cyber-blue: #4a5568;    /* Muted blue-grey */
        --cyber-pink: #718096;    /* Muted pink-grey */
        --cyber-green: #2d3748;   /* Dark grey-green */
        --cyber-purple: #2d3748;  /* Dark purple-grey */
        --matrix-green: #1a202c; /* Very dark green */
        }
      
      body {
        font-family: 'Share Tech Mono', monospace;
        background: var(--cyber-black);
        color: #e0e0e0;
        overflow-x: hidden;
        min-height: 100vh;
        cursor: crosshair;
      }
      
      ::selection {
        background: var(--cyber-pink);
        color: var(--cyber-black);
      }
      
      /* Glitch effect */
      @keyframes glitch {
        0% {
          transform: translate(0);
          filter: hue-rotate(0deg);
        }
        20% {
          transform: translate(-2px, 2px);
          filter: hue-rotate(90deg);
        }
        40% {
          transform: translate(-2px, -2px);
          filter: hue-rotate(180deg);
        }
        60% {
          transform: translate(2px, 2px);
          filter: hue-rotate(270deg);
        }
        80% {
          transform: translate(2px, -2px);
          filter: hue-rotate(360deg);
        }
        100% {
          transform: translate(0);
          filter: hue-rotate(0deg);
        }
      }
      
      /* Cyber grid background */
      body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
          linear-gradient(rgba(0, 212, 255, 0.1) 1px, transparent 1px),
          linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px);
        background-size: 50px 50px;
        pointer-events: none;
        z-index: 1;
      }
    </style>
  </body>
</html>