---
// src/layouts/Layout.astro
import StickyNav from '../components/StickyNav.astro';

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Share+Tech+Mono&display=swap" rel="stylesheet">
  </head>
  <body>
    <StickyNav />
    <slot />
    
    <button id="back-to-top" class="back-to-top" onclick="window.scrollTo({ top: 0, behavior: 'smooth' })">
      â†‘
    </button>
    
    <button id="floating-chat" class="floating-chat">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
        <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>
      </svg>
    </button>

    <style is:global>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      :root {
        --cyber-black: #040404;
        --cyber-dark: #0b0e1a;
        --cyber-blue: #4a6fa5;
        --cyber-pink: #8a5a7a;
        --cyber-green: #3c614e;
        --cyber-purple: #5a4a7a;
        --matrix-green: #1a3028;
      }
      
      body {
        font-family: 'Share Tech Mono', monospace;
        background: var(--cyber-dark);
        color: #e0e0e0;
        overflow-x: hidden;
        min-height: 100vh;
        cursor: crosshair;
      }
      
      ::selection {
        background: var(--cyber-pink);
        color: var(--cyber-black);
      }
      
      @keyframes glitch {
        0% {
          transform: translate(0);
          filter: hue-rotate(0deg);
        }
        20% {
          transform: translate(-2px, 2px);
          filter: hue-rotate(90deg);
        }
        40% {
          transform: translate(-2px, -2px);
          filter: hue-rotate(180deg);
        }
        60% {
          transform: translate(2px, 2px);
          filter: hue-rotate(270deg);
        }
        80% {
          transform: translate(2px, -2px);
          filter: hue-rotate(360deg);
        }
        100% {
          transform: translate(0);
          filter: hue-rotate(0deg);
        }
      }
      
      body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
          linear-gradient(rgba(0, 212, 255, 0.1) 1px, transparent 1px),
          linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px);
        background-size: 50px 50px;
        pointer-events: none;
        z-index: 1;
      }
      
      .back-to-top {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        width: 50px;
        height: 50px;
        background: #111;
        border: 1px solid #333;
        color: var(--cyber-green);
        font-size: 1.5rem;
        cursor: pointer;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s;
        z-index: 100;
      }
      
      .back-to-top.visible {
        opacity: 1;
        visibility: visible;
      }
      
      .back-to-top:hover {
        background: var(--cyber-green);
        color: #111;
      }
      
      .floating-chat {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        width: 50px;
        height: 50px;
        background: #111;
        border: 1px solid var(--cyber-green);
        color: var(--cyber-green);
        font-size: 1.5rem;
        cursor: pointer;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s;
        z-index: 100;
        transform: translateY(-70px);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
      }
      
      .floating-chat.visible {
        opacity: 1;
        visibility: visible;
      }
      
      .floating-chat:hover {
        background: var(--cyber-green);
        color: #111;
        transform: translateY(-70px) scale(1.1);
      }
      
      .floating-chat svg {
        width: 24px;
        height: 24px;
      }
    </style>

    <script>
      window.addEventListener('scroll', () => {
        const backToTop = document.getElementById('back-to-top');
        const floatingChat = document.getElementById('floating-chat');
        // Changed to viewport-based
        if (window.scrollY > window.innerHeight * 0.5) {
          backToTop?.classList.add('visible');
          floatingChat?.classList.add('visible');
        } else {
          backToTop?.classList.remove('visible');
          floatingChat?.classList.remove('visible');
        }
      });
      
      // Handle floating chat button click
      document.getElementById('floating-chat')?.addEventListener('click', () => {
        const event = new CustomEvent('open-chat');
        window.dispatchEvent(event);
      });
    </script>
  </body>
</html>